<UserControl x:Class="VisGit.Views.IssuesView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
            xmlns:local="clr-namespace:VisGit.Views"
            xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
            xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
            xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
            xmlns:md="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
            xmlns:viewmodels="clr-namespace:VisGitCore.ViewModels;assembly=VisGitCore"
            Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
            Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
            d:Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
            d:DataContext="{d:DesignInstance Type=viewmodels:IssuesViewModel}"
            mc:Ignorable="d"
            d:DesignHeight="286" d:DesignWidth="1070">

    <FrameworkElement.CommandBindings>
        <CommandBinding Command="{x:Static md:Commands.Hyperlink}" Executed="OpenHyperlink" />
        <CommandBinding Command="{x:Static md:Commands.Image}" Executed="CommandBinding_Executed" />
    </FrameworkElement.CommandBindings>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="../Resources/Converters.xaml" />
                <ResourceDictionary Source="../Resources/Styles/GridSplitter.xaml" />
                <ResourceDictionary Source="../Resources/Styles/Button.xaml" />
                <ResourceDictionary Source="../Resources/Styles/TextBox.xaml" />
                <ResourceDictionary Source="../Resources/Styles/Calendar.xaml" />
                <ResourceDictionary Source="../Resources/Styles/ToggleButton.xaml" />
                <ResourceDictionary Source="../Resources/Styles/ContextMenu.xaml" />
                <ResourceDictionary Source="../Resources/Styles/MenuItem.xaml" />
                <ResourceDictionary Source="../Resources/Styles/ListViewItem.xaml" />
                <ResourceDictionary Source="../Resources/Styles/ComboBox.xaml" />
                <ResourceDictionary Source="../Resources/Styles/MarkdownViewer.xaml" />
                <ResourceDictionary Source="../Resources/Styles/TabItem.xaml" />

                <!-- MEDIA -->
                <ResourceDictionary  Source="../Resources/Media/UiImages.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <!-- <Button  DockPanel.Dock="Bottom" Content="Home View" Command="{Binding NavigateHomeCommand}" /> -->
        <Grid x:Name="IssuesMainLayout" Margin="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- LISTVIEW -->

            <ListView x:Name="IssuesLV" Grid.Column="0" Width="auto"
                      ItemsSource="{Binding RepositoryIssuesVMs}"
                      SelectedItem="{Binding SelectedIssueViewModel}" BorderThickness="0"
                      d:Background="Transparent" SelectionChanged="MiliestonesLV_SelectionChanged">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Width="18" Content="{StaticResource UiSaveImage}" HorizontalAlignment="Left"
                                            d:Content="{StaticResource UiSaveImageDT}" Margin="-4,0,2,0"
                                            Visibility="{Binding HasChanges, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <TextBlock Text="{Binding Title}" Opacity="{Binding Open, Converter={StaticResource BoolToOpacityConverter}}" />
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" FontWeight="Bold" />
                                    </StackPanel>
                                    <TextBlock Text="{Binding Labels, Converter={StaticResource LabelsToCsvConverter}}" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Opened: " FontStyle="Italic" />
                                        <TextBlock Text="{Binding Author.Login}" />
                                        <TextBlock Padding="4,0,0,0" Text="{Binding DateCreated, Converter={StaticResource DateOffsetToDateConverter}}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Milestone: " FontStyle="Italic" />
                                        <TextBlock Text="{Binding MilestoneTitle}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Updated: " FontStyle="Italic" />
                                        <TextBlock Text="{Binding DateUpdated, Converter={StaticResource DateOffsetToDateConverter}}" />
                                    </StackPanel>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                          BorderBrush="Transparent" BorderThickness="2"
                          Background="Gray"
                          Style="{StaticResource GridSplitterStyle}"></GridSplitter>

            <Grid x:Name="MilestonesDetialsView" Grid.Column="2" Margin="2" Background="Transparent"
                  Visibility="{Binding  SelectedIssueViewModel, Converter={StaticResource NullToVisibilityConverter}}">

                <!-- TITLE AND DESCRIPTION -->

                <DockPanel x:Name="MilestoneTitleAndDescDP" Grid.Column="0" LastChildFill="True" Margin="0">

                    <!-- TITLE ROW -->
                    <DockPanel  DockPanel.Dock="Top" LastChildFill="True">

                        <Button DockPanel.Dock="Left" Width="26" Height="26"  VerticalAlignment="Center"
                            Content="{DynamicResource UiSaveImage}" d:Content="{DynamicResource UiSaveImageDT}"
                            Style="{StaticResource ButtonStyle}" Command="{Binding SelectedIssueViewModel.SaveIssueCommand}"
                            Visibility="{Binding SelectedIssueViewModel.HasChanges,Converter={StaticResource BoolToVisibilityConverter}}"
                            IsEnabled="{Binding SelectedIssueViewModel.HasErrors, Converter={StaticResource InverseBoolConverter}}"
                            Opacity="{Binding SelectedIssueViewModel.HasErrors, Converter={StaticResource InverseBoolToOpacityConverter}}"
                           ToolTip="Save Changes">
                        </Button>

                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Opacity="0.7">
                            <TextBlock Text="# " />
                            <TextBlock Text="{Binding SelectedIssueViewModel.IssueNumber}" />
                        </StackPanel>

                        <!--<TextBox x:Name="LabelGitNameTB" DockPanel.Dock="Right" HorizontalAlignment="Right" Opacity="0.5" Style="{StaticResource TextBoxStyle}"
                                FontStyle="Italic" Text="{Binding SelectedIssueViewModel.GitIssue.Title, Mode=OneWay,
                                Converter={StaticResource GitMilestoneTitleConverter}}"
                                d:Text="(Git Title: UI Bug)" d:Foreground="Gray" />-->

                        <TextBox x:Name="MilestoneTitleTB" VerticalAlignment="Center" Margin="4,0,0,0"
                                Text="{Binding SelectedIssueViewModel.Title, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="18" Style="{StaticResource TextBoxStyle}"
                                d:Background="Transparent" d:Foreground="White" d:Text="Issue Title" />
                    </DockPanel>

                    <Separator DockPanel.Dock="Top" Background="Gray"></Separator>

                    <!-- DATES AND COMMANDS ROW -->
                    <DockPanel DockPanel.Dock="Top" Height="24" LastChildFill="True">

                        <!-- Left Docking Info and Commands -->
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">

                            <!-- User Avatar -->
                            <Ellipse  Height="22" Width="22" Margin="2,0,4,0" Stroke="#80808080" SnapsToDevicePixels="True">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding SelectedIssueViewModel.Author.AvatarUrl}"
                                            d:ImageSource="pack://application:,,,/VisGit;component/Resources/Media/Images/WillyRound32.png" RenderOptions.BitmapScalingMode="HighQuality" />
                                </Ellipse.Fill>
                            </Ellipse>

                            <!-- Opened/Closed by Text-->
                            <TextBlock x:Name="DatesTB" VerticalAlignment="Center" Text="{Binding SelectedIssueViewModel,
                                Converter={StaticResource IssueToKeyDatesConverter}}" d:Text="Opened: June 23, 2024 Closed: June 30, 2024 by Dave"
                                   d:Foreground="White" />

                            <!-- Open/Closed DropDown -->

                            <ToggleButton x:Name="OpenCloseIssueDDB" Width="24" Style="{StaticResource ToggleButtonBorderlessStyle}"
                                      d:Content="{DynamicResource UiInvisibleImageDT}" ToolTip="Set Open/Closed State">
                                <imaging:CrispImage Moniker="{Binding SelectedIssueViewModel.Open,
                                Converter={StaticResource OpenStatusToImageConverter}}" />
                            </ToggleButton>
                            <Popup x:Name="OpenCloseIssuePopup" PlacementTarget="{Binding ElementName=OpenCloseIssueDDB}" StaysOpen="False"
                               IsOpen="{Binding ElementName=OpenCloseIssueDDB, Path=IsChecked}" MinWidth="150"
                               Closed="OpenCloseIssuePopup_Closed">
                                <ListView x:Name="OpenCloseIssueLV" SelectionChanged="CloseIssueLV_SelectionChanged" Padding="2"
                                     ItemsSource="{Binding ItemStateReasons}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedIssueViewModel.LockReason}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=OpenCloseIssueLV}">
                                            <i:InvokeCommandAction Command="{Binding CloseIssueCommand}"
                                                               CommandParameter="{Binding ElementName=OpenCloseIssueLV, Path=SelectedItem}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListView>
                            </Popup>

                            <!-- Open/Closed Status Text -->
                            <TextBlock VerticalAlignment="Center" Text="{Binding SelectedIssueViewModel.ItemStateReason,
                            Converter={StaticResource IssueStatusReasonToTextConverter}}"
                            d:Text="Open" d:Foreground="White" />

                            <!-- Lock DropDown -->
                            <ToggleButton x:Name="LockDDB" Width="24" Style="{StaticResource ToggleButtonBorderlessStyle}"
                                      d:Content="{DynamicResource UiLockedImageDT}" ToolTip="Set Locked State">
                                <imaging:CrispImage Moniker="{Binding SelectedIssueViewModel.Locked,
                                Converter={StaticResource LockStatusToImageConverter}}" />
                            </ToggleButton>
                            <Popup x:Name="LockIssuePopup" Closed="LockIssuePopup_Closed" PlacementTarget="{Binding ElementName=LockDDB}" StaysOpen="False"
                               IsOpen="{Binding ElementName=LockDDB, Path=IsChecked}" MinWidth="150">
                                <ListView x:Name="LockIssueLV" SelectionChanged="LockIssueLV_SelectionChanged"

                                      Padding="2"
                                     ItemsSource="{Binding LockStateReasons}" DisplayMemberPath="Name">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=LockIssueLV}">
                                            <i:InvokeCommandAction Command="{Binding LockIssueCommand}"
                                                               CommandParameter="{Binding ElementName=LockIssueLV, Path=SelectedItem}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListView>
                            </Popup>

                            <!-- Lock Status Text -->
                            <TextBlock VerticalAlignment="Center" Text="{Binding SelectedIssueViewModel.LockReason,
                            Converter={StaticResource LockStatusToTextConverter}}"
                            d:Text="Locked: Off Topic" d:Foreground="White" />

                            <!-- Assignees -->

                            <ToggleButton x:Name="AssignUserDDB" Width="24" Style="{StaticResource ToggleButtonBorderlessStyle}"
                                      Content="{DynamicResource UiAssignees}" Margin="4,0,0,0"
                                    d:Content="{DynamicResource UiAssigneesDT}" ToolTip="Assign/ed Users" />

                            <Popup x:Name="AssignUserPopup" PlacementTarget="{Binding ElementName=AssignUserDDB}" StaysOpen="False"
                               IsOpen="{Binding ElementName=AssignUserDDB, Path=IsChecked}" MinWidth="150">
                                <Border BorderThickness="1" BorderBrush="Gray">
                                    <ListView x:Name="AssignUserLV" ItemsSource="{Binding RepositoryCollaborators}" DisplayMemberPath="Login"
                                            MaxHeight="300" BorderThickness="0"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="AssignUserLV_SelectionChanged">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=AssignUserLV}">
                                                <i:InvokeCommandAction Command="{Binding AssignUserCommand}"
                                                                       CommandParameter="{Binding ElementName=AssignUserLV, Path=SelectedItem}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListView>

                                    <!-- Below kept for prosperity - cool user search function, but canot use with assignments as has to be a collaborator -->
                                    <!--<StackPanel Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}">
                                        <DockPanel LastChildFill="True" Height="26">
                                            <Button DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}" Height="24" Width="24"
                                                Margin="1" Command="{Binding SearchUsersCommand}"
                                                CommandParameter="{Binding ElementName=UserSearchTB, Path=Text}">
                                                <ContentControl Background="Transparent" Width="26" Content="{StaticResource UiSearchImage}" d:Content="{StaticResource UiSearchImageDT}" />
                                            </Button>
                                            <TextBox x:Name="UserSearchTB" Style="{StaticResource TextBoxStyle}"
                                                 Height="26" Margin="4" AcceptsReturn="false">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding SearchUsersCommand}"
                                                            CommandParameter="{Binding ElementName=UserSearchTB, Path=Text}" />
                                                </TextBox.InputBindings>
                                            </TextBox>
                                        </DockPanel>
                                        <ListView x:Name="AssignUserLV"  ItemsSource="{Binding SearchUserResult.Items}"
                                            DisplayMemberPath="Login"
                                            MinHeight="100" MaxHeight="300" BorderThickness="0"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=AssignUserLV}">
                                                    <i:InvokeCommandAction Command="{Binding AssignUserCommand}"
                                                                       CommandParameter="{Binding ElementName=AssignUserLV, Path=SelectedItem}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ListView>
                                    </StackPanel>-->
                                </Border>
                            </Popup>

                            <!-- Assignees Avatars List -->

                            <ListView x:Name="AssignedUsersLV" ItemsSource="{Binding SelectedIssueViewModel.Assignees}"
                                   BorderThickness="0" SelectedItem="{Binding SelectedAssignee}"
                                   ItemContainerStyle="{StaticResource LvItemStyle}"
                                   d:Width="50" d:Background="Transparent" d:BorderThickness="0" SelectionChanged="AssignedUsersLV_SelectionChanged">

                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Ellipse Height="22" Width="22" Margin="0,0,0,0" Stroke="Transparent"
                                                 SnapsToDevicePixels="True" ToolTip="{Binding Login}">
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{Binding AvatarUrl}"
                                                            RenderOptions.BitmapScalingMode="HighQuality" />
                                                </Ellipse.Fill>
                                            </Ellipse>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>

                                <ListView.ContextMenu>
                                    <ContextMenu Style="{StaticResource ContextMenu}">
                                        <MenuItem  Style="{StaticResource MenuItem}"

                                               Command="{Binding UnassignUserCommand}">
                                            <MenuItem.Header>
                                                <TextBlock Text="{Binding Path=SelectedAssignee.Login, StringFormat='Unassign {0}'}"></TextBlock>
                                            </MenuItem.Header>
                                            <MenuItem.Icon>
                                                <ContentControl Width="16" Content="{StaticResource UiUnassignUserImage}"
                                                            d:Content="{StaticResource UiUnassignUserImageDT}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </StackPanel>

                        <!-- Right Docking Info and Commands -->

                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Height="24">

                            <!-- Collapse All Comments -->

                            <ToggleButton x:Name="CollapseCommentsBT" Width="24" MinHeight="24"
                               Content="{DynamicResource UiCollapseAllImage}" d:Content="{DynamicResource UiCollapseAllImageDT}"
                               Style="{StaticResource ToggleButtonVisibleBorderlessStyle}" ToolTip="Collapse All Comments"
                                Command="{Binding CollapseCommentsCommand}" IsChecked="{Binding CollapseAllComments, Mode=TwoWay}">
                            </ToggleButton>

                            <!-- Add Comment -->

                            <Button x:Name="AddCommentBT" Width="24" MinHeight="24"
                               Content="{DynamicResource UiAddCommentImage}" d:Content="{DynamicResource UiAddCommentImageDT}"
                               Style="{StaticResource ButtonStyle}" ToolTip="Add new Comment" Command="{Binding CreateNewIssueCommentCommand}"
                                    Click="AddCommentBT_Click">
                            </Button>

                            <!-- Open Issue URL -->

                            <Button Width="24" MinHeight="24"
                             Content="{DynamicResource UiBrowserLinkImage}" d:Content="{DynamicResource UiBrowserLinkImageDT}"
                             Style="{StaticResource ButtonStyle}" ToolTip="Open in Github" Command="{Binding GoToIssueLinkCommand}"
                                    CommandParameter="{Binding SelectedIssueViewModel.IssueUrl}">
                            </Button>

                            <!-- Delete Issue - Removed - appears that no API function-->

                            <!--<Button Width="24" MinHeight="24"
                             Content="{DynamicResource UiDeleteImage}" d:Content="{DynamicResource UiDeleteImageDT}"
                             Style="{StaticResource ButtonStyle}" ToolTip="Delete Milestone" Command="{Binding DeleteMilestoneCommand}">
                            </Button>-->
                        </StackPanel>
                    </DockPanel>

                    <!-- ISSUES AND LABELS ROW -->
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">

                        <!-- LABELS -->

                        <!-- Add Label -->

                        <ToggleButton x:Name="AddLabelBT" Width="24" Style="{StaticResource ToggleButtonBorderlessStyle}"
                                      Content="{DynamicResource UiAddLabelImage}"
                                    d:Content="{DynamicResource UiAddLabelImageDT}" ToolTip="Add Label" />

                        <Popup x:Name="AddLabelPopup" PlacementTarget="{Binding ElementName=AddLabelBT}" StaysOpen="False"
                               IsOpen="{Binding ElementName=AddLabelBT, Path=IsChecked}" MinWidth="150">
                            <ListView x:Name="NewLabelLV"  ItemsSource="{Binding RepositoryLabels}"
                                      SelectedItem="{Binding SelectedNewLabel}" DisplayMemberPath="Name">
                            </ListView>
                        </Popup>

                        <!-- Existing Labels -->

                        <ListView  ItemsSource="{Binding SelectedIssueViewModel.Labels}" SelectedItem="{Binding SelectedExistingLabel}"
                                   BorderThickness="0"
                                   ItemContainerStyle="{StaticResource LvItemStyle}"
                                   d:Width="100" d:Background="Transparent" d:BorderThickness="0">

                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Border BorderThickness="1" BorderBrush="{Binding Color, Converter={StaticResource HexRgbToLabelForeground}}"
                                               SnapsToDevicePixels="True" CornerRadius="8" Background="{Binding Color, Converter={StaticResource HexRgbToLabelBackground}}" Margin="2">
                                            <TextBlock Text="{Binding Name}"
                                                   Padding="8,0,8,0" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                                                   FontWeight="Bold" />
                                        </Border>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                            <ListView.ContextMenu>
                                <ContextMenu Style="{StaticResource ContextMenu}">
                                    <MenuItem Header="Remove Label" Style="{StaticResource MenuItem}" Command="{Binding RemoveLabelCommand}">
                                        <MenuItem.Icon>
                                            <ContentControl Width="16" Content="{StaticResource UiLabelImage}"
                                                            d:Content="{StaticResource UiLabelImageDT}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListView.ContextMenu>
                        </ListView>

                        <!-- ISSUES -->
                        <StackPanel x:Name="MilestoneInfo" Orientation="Horizontal" Visibility="{Binding SelectedIssueViewModel.Milestone.Title,
                                    Converter={StaticResource NullToVisibilityConverter}}" VerticalAlignment="Center">
                            <!--<ContentControl Width="24" Content="{StaticResource UiMilestoneImage}"
                                        d:Content="{StaticResource UiMilestoneImageDT}" />-->

                            <ToggleButton x:Name="ChangeMilestoneDDB" Width="24" Height="24" Style="{StaticResource ToggleButtonBorderlessStyle}"
                                      Content="{DynamicResource UiMilestoneImage}"
                                    d:Content="{DynamicResource UiMilestoneImageDT}" ToolTip="Change Milestone" />

                            <Popup  PlacementTarget="{Binding ElementName=ChangeMilestoneDDB}" StaysOpen="False"
                               IsOpen="{Binding ElementName=ChangeMilestoneDDB, Path=IsChecked}" MinWidth="150">
                                <ListView ItemsSource="{Binding RepositoryMilestonesVMs}" DisplayMemberPath="Title"
                                      SelectedItem="{Binding SelectedMilestoneVM}">
                                </ListView>
                            </Popup>

                            <TextBlock Text="{Binding SelectedIssueViewModel.Milestone.Title, Mode=OneWay}"
                                   d:Foreground="Gainsboro" d:Text="Milestone 1" VerticalAlignment="Center" />
                            <TextBlock Text="Issues:" d:Foreground="Gainsboro" Margin="4,0,0,0" FontWeight="Bold" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding SelectedIssueViewModel.IssuesStatus}" VerticalAlignment="Center"
                                   d:Text="50% complete 1 open 1 closed" d:Foreground="Gainsboro" Margin="4,0,0,0" />
                            <ProgressBar Value="{Binding SelectedIssueViewModel.PercentageComplete, Mode=OneWay}"
                                     Width="50" Height="5" Background="#20808080" Foreground="#00a2ed" BorderBrush="#80808080"
                                     d:Value="50" Margin="8,0,0,0" />
                        </StackPanel>
                    </StackPanel>

                    <TabControl TabStripPlacement="Left" Background="Transparent">

                        <TabItem Style="{StaticResource TabItemStyle}" Width="30" Height="30" Margin="0" Padding="0" ToolTip="Issue">
                            <TabItem.Header>
                                <ContentControl Width="24" Content="{StaticResource UiMarkdownImage}" d:Content="{StaticResource UiMarkdownImageDT}" />
                            </TabItem.Header>
                            <TabItem.Content>
                                <md:MarkdownViewer Markdown="{Binding SelectedIssueViewModel.Body}" Style="{StaticResource MarkdownViewer}"
                                                   d:Markdown="**Markdown** *here*"   Hyperlink.RequestNavigate="MarkdownViewer_RequestNavigate">
                                </md:MarkdownViewer>
                            </TabItem.Content>
                        </TabItem>

                        <TabItem Style="{StaticResource TabItemStyle}"  Width="30" Height="30" Margin="0" Padding="0" ToolTip="Edit">
                            <TabItem.Header>
                                <ContentControl Width="24" Content="{StaticResource UiPecilImage}" d:Content="{StaticResource UiPecilImageDT}" />
                            </TabItem.Header>
                            <TabItem.Content>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="2" Width="auto">
                                    <TextBox x:Name="EditIssuePostTB"
                                        TextWrapping="wrap" AcceptsReturn="True" Padding="2"
                                        Text="{Binding SelectedIssueViewModel.Body, UpdateSourceTrigger=PropertyChanged}"
                                        Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
                                        d:Background="Transparent" d:Foreground="White" d:Text="Milestone Description"
                                         PreviewMouseWheel="EditIssuePostTB_PreviewMouseWheel" SpellCheck.IsEnabled="True" />
                                </ScrollViewer>
                            </TabItem.Content>
                        </TabItem>

                        <!-- COMMENTS -->

                        <TabItem x:Name="CommentsTabItem" Style="{StaticResource TabItemStyle}"  Width="30" Height="Auto"
                                 Margin="0" Padding="0,0,0,4" ToolTip="Comments" HorizontalAlignment="Center">

                            <TabItem.Header>
                                <StackPanel Orientation="Vertical">
                                    <ContentControl Width="24" Height="24" Content="{StaticResource UiCommentsImage}" d:Content="{StaticResource UiCommentsImageDT}" />
                                    <TextBlock Text="{Binding CommentsCount}" HorizontalAlignment="Center" d:Foreground="White"></TextBlock>
                                </StackPanel>
                            </TabItem.Header>

                            <TabItem.Content>

                                <ListView x:Name="CommentsLV"  ItemsSource="{Binding IssueCommentsVM.RepositoryIssueCommentsVMs}"
                                   BorderThickness="0" VirtualizingPanel.ScrollUnit="Pixel" ScrollViewer.CanContentScroll="false"
                                   ItemContainerStyle="{StaticResource LvItemStyleComments}"
                                   d:Width="auto" d:Background="Transparent" d:BorderThickness="0">

                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>

                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderThickness="1" BorderBrush="#80808080" Margin="2,2,2,4">
                                                <StackPanel Orientation="Vertical">

                                                    <!-- COMMENT HEADER ROW -->
                                                    <DockPanel x:Name="CommentsHeader" LastChildFill="True" VerticalAlignment="Center"
                                                               Background="#20808080" MaxWidth="{Binding ElementName=CommentsLV, Path=ActualWidth}">

                                                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center">

                                                            <Button DockPanel.Dock="Left" Width="24" Height="24"  VerticalAlignment="Center"
                                                              Content="{DynamicResource UiSaveImage}" d:Content="{DynamicResource UiSaveImageDT}"
                                                              Style="{StaticResource ButtonStyle}" Command="{Binding SaveCommentCommand}"
                                                              Visibility="{Binding HasChanges,Converter={StaticResource BoolToVisibilityConverter}}"
                                                             ToolTip="Save Changes">
                                                            </Button>

                                                            <!-- User Image -->

                                                            <Ellipse Height="22" Width="22" Margin="2,0,2,0" DockPanel.Dock="Left"
                                                                 Stroke="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                                                                SnapsToDevicePixels="True">
                                                                <Ellipse.Fill>
                                                                    <ImageBrush ImageSource="{Binding Author.AvatarUrl}" RenderOptions.BitmapScalingMode="HighQuality" />
                                                                </Ellipse.Fill>
                                                            </Ellipse>

                                                            <!-- author + dates text -->
                                                            <TextBlock  Padding="4,0,0,4" VerticalAlignment="Center" DockPanel.Dock="Left">
                                                                <TextBlock.Text>
                                                                    <MultiBinding StringFormat="{} {0} commented on {1}">
                                                                        <Binding Path="Author.Login" />
                                                                        <Binding Path="CreatedAt" Converter="{StaticResource DateOffsetToDateConverter}" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </StackPanel>

                                                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">

                                                            <!-- Buttons -->
                                                            <Border DockPanel.Dock="Right" BorderThickness="1" BorderBrush="#80808080"
                                                                   SnapsToDevicePixels="True" CornerRadius="10" Height="18" Margin="0,0,4,0">
                                                                <TextBlock Text="{Binding GitIssueComment.AuthorAssociation.StringValue}"
                                                                       VerticalAlignment="Center"
                                                                     Padding="4,0,4,0" Foreground="#d0808080" FontWeight="Bold" />
                                                            </Border>

                                                            <ToggleButton x:Name="CollapseCommentBT" DockPanel.Dock="Right" Style="{DynamicResource ToggleButtonVisibleBorderlessStyle}"
                                                                        Content="{DynamicResource UiCollapseImage}" Width="24" IsChecked="{Binding Collapsed}" ToolTip="Collapse Comment">
                                                            </ToggleButton>

                                                            <ToggleButton x:Name="CommentEditBT" DockPanel.Dock="Right" Style="{DynamicResource ToggleButtonVisibleBorderlessStyle}"
                                                                Content="{DynamicResource UiPecilImage}" Width="24" ToolTip="Edit Comment">
                                                            </ToggleButton>

                                                            <Button DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}" Command="{Binding DeleteCommentCommand}"
                                                                Content="{DynamicResource UiDeleteImage}" Width="24" ToolTip="Delete Comment" />
                                                        </StackPanel>

                                                        <TextBlock Opacity="0.5" Text="{Binding BodyFirstLine}"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Padding="10,0,10,0" />
                                                    </DockPanel>

                                                    <!-- Body Text -->
                                                    <Grid x:Name="BodyTextGrid" Visibility="{Binding  Collapsed,
                                                        Converter={StaticResource InverseBoolToVisibilityConverter}}">

                                                        <TextBox x:Name="CommentEditTB" Text="{Binding Body, UpdateSourceTrigger=PropertyChanged}" Padding="4" AcceptsReturn="true"
                                                                    TextWrapping="Wrap" MaxWidth="{Binding ActualWidth, ElementName=CommentsHeader}" AcceptsTab="True"
                                                                    Visibility="{Binding ElementName=CommentEditBT, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                    HorizontalScrollBarVisibility="auto" MaxHeight="{Binding ActualHeight, ElementName=CommentsLV}"
                                                                 PreviewMouseWheel="CommentEditTB_PreviewMouseWheel" SpellCheck.IsEnabled="true" />

                                                        <md:MarkdownViewer Markdown="{Binding Body}" Style="{StaticResource MarkdownViewer}"
                                                                            PreviewMouseWheel="MarkdownViewer_PreviewMouseWheel"
                                                                            Width="{Binding ActualWidth, ElementName=CommentsLV}"
                                                                            Hyperlink.RequestNavigate="MarkdownViewer_RequestNavigate"
                                                                            Visibility="{Binding ElementName=CommentEditBT,
                                                                            Path=IsChecked, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                                        </md:MarkdownViewer>
                                                    </Grid>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <!--<ListView.ContextMenu>

                                        <ContextMenu Style="{StaticResource ContextMenu}">
                                            <MenuItem Header="Remove Label" Style="{StaticResource MenuItem}" Command="{Binding RemoveLabelCommand}">
                                                <MenuItem.Icon>
                                                    <ContentControl Width="16" Content="{StaticResource UiLabelImage}"
                                                            d:Content="{StaticResource UiLabelImageDT}" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListView.ContextMenu>-->
                                </ListView>
                            </TabItem.Content>
                        </TabItem>
                    </TabControl>
                </DockPanel>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>